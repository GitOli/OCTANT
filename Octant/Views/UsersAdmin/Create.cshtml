@using IdentitySample.Models
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@model IdentitySample.Models.RegisterViewModel

@{
    ViewBag.Title = "User Create";

    var db = new ApplicationDbContext();
    var user = db.Users.Find(User.Identity.GetUserId());
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-bar-chart"></i> Octant</a></li>
        <li><a href="@Url.Action("Index", "UsersAdmin")">Users</a></li>
        <li class="active">Create</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">

                <form method="post" action="@Url.Action("Create", "UsersAdmin")" role="form" enctype="multipart/form-data" class="form-horizontal">
                    <div class="box-header with-border">
                        @*<h3 class="box-title">Create User</h3>*@
                        <input type="submit" value="Create" class="btn btn-primary" data-toggle="tooltip" title="Create new User" />
                    </div><!-- /.box-header -->
                    <div class="box-body">

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdFirm, "Firm", htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @if (User.IsInRole("Admin"))
                                {
                                    @Html.DropDownList("IdFirm", null, htmlAttributes: new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.IdFirm, "", new {@class = "text-danger"})
                                }
                                else
                                {
                                    @Html.Raw("<span style=\"position: relative; top: 7px;\">" + user.Firm.Name + "</span>")
                                    @Html.HiddenFor(model => model.IdFirm, new {id = "Firm", Value = user.IdFirm})
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstName, new {@class = "col-md-2 control-label"})
                            <div class="col-md-7">
                                @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control"})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.LastName, new {@class = "col-md-2 control-label"})
                            <div class="col-md-7">
                                @Html.TextBoxFor(m => m.LastName, new {@class = "form-control"})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
                            <div class="col-md-7">
                                @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
                            <div class="col-md-7">
                                @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label"})
                            <div class="col-md-7">
                                @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">
                                Profile
                            </label>
                            <div class="col-md-7">
                                @foreach (var item in (ViewBag.RoleId as MultiSelectList))
                                {
                                    <input type="checkbox" name="SelectedRoles"
                                           value="@item.Value" class="checkbox-inline" checked="@item.Selected" />
                                    @Html.Label(item.Value, new { @class = "control-label" })
                                    @Html.Raw("&nbsp;&nbsp;")
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(model => model.IsActive, htmlAttributes: new {@checked = "checked", @style = "margin-left: 0;"})
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>
                        <div>
                            <div class="form-group">
                                <div class="control-label col-md-2">Image</div>
                                <div class="col-md-7">
                                    <input type="file" name="fileBase" />
                                </div>
                            </div>
                        </div>

                    </div><!-- /.box-body -->
                    <div class="box-footer">
                        <input type="submit" value="Create" class="btn btn-primary" data-toggle="tooltip" title="Create new User" />
                        @Html.ActionLink("Cancel", "Index", null, new {@class = "btn btn-default"})
                    </div><!-- /.box-footer -->
                </form>
            </div><!-- /.box -->
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <!-- Change the active in the left side menu -->
    <script type="text/javascript">
        $(document).ready(function () {
            $('ul.sidebar-menu > li').removeClass('active');
            $('ul.sidebar-menu > li > a[href="/UsersAdmin"]').parent().addClass('active');
        });
    </script>
}
