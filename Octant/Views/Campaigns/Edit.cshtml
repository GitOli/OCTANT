@using System.Globalization
@using System.Web.UI.WebControls
@using IdentitySample.Models
@using Interview
@model Campaign

@{
    ViewBag.Title = "Campaign " + Model.Name + " Edit";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-bar-chart"></i> Octant</a></li>
        <li><a href="@Url.Action("Index", "Home")">Campaigns</a></li>
        <li><a href="@Url.Action("Details", "Campaigns", new { id = Model.IdCampaign })">@Html.DisplayFor(model => model.Name)</a></li>
        <li class="active">Edit</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Edit Campaign</h3>
                </div><!-- /.box-header -->
                <form method="post" action="@Url.Action("Edit", "Campaigns", new { id = Model.IdCampaign })" role="form" class="form-horizontal">
                    <div class="box-body">
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.IdCampaign)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Id, "Manager", new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.DropDownList("Manager", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, new {@class = "control-label col-md-2"})
                            <div class="col-md-3">
                                <div class="input-group">
                                    @*<div class="input-group-addon"><i class="fa fa-calendar"></i>
                                    </div>*@
                                    @*@Html.EditorFor(model => model.StartDate, new {type = "date", @class = "form-control"})*@
                                    @{
                                        //var dt = DateTime.Now;
                                        //var sd = dt.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
                                        string sd = "";
                                        if (Model.StartDate != null)
                                        {
                                            DateTime startdate = DateTime.ParseExact(Model.StartDate.ToString(), "dd-MM-yy HH:mm:ss", CultureInfo.InvariantCulture);
                                            sd = startdate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
                                        }
                                        
                                    }
                                    @Html.EJ().DatePickerFor(model => model.StartDate).Value(sd).Locale("fr-FR").DateFormat("dd/MM/yyyy").Width("100%").MinDate(@ViewBag.MinDateDay)
                                    @*@Html.EJ().DatePickerFor(model => model.StartDate).Value(sd).Locale("fr-FR").DateFormat("dd/MM/yyyy")*@
                                </div>
                                @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
                            </div>
                            @Html.LabelFor(model => model.EndDate, new {@class = "control-label col-md-1"})
                            <div class="col-md-3">
                                <div class="input-group">
                                    @*<div class="input-group-addon"><i class="fa fa-calendar"></i>
                                    </div>*@
                                    @*@Html.EditorFor(model => model.EndDate, new {type = "date", @class = "form-control"})*@
                                    @{
                                        //var ed = dt.AddDays(7).ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
                                        string ed = "";
                                        if (Model.EndDate != null)
                                        {
                                            DateTime enddate = DateTime.ParseExact(Model.EndDate.ToString(), "dd-MM-yy HH:mm:ss", CultureInfo.InvariantCulture);
                                            ed = enddate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
                                        }
                                        
                                    }
                                    @Html.EJ().DatePickerFor(model => model.EndDate).Value(ed).Locale("fr-FR").DateFormat("dd/MM/yyyy").Width("100%").MinDate(@ViewBag.MinDateDay)
                                    @*@Html.EJ().DatePickerFor(model => model.EndDate).Value(ed).Locale("fr-FR").DateFormat("dd/MM/yyyy").Width("100%")*@
                                </div>
                                @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCustomer, "Customer", new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.DropDownList("IdCustomer", null, "[--Please select--]", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdCustomer, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdQuestionnaire, "Questionnaire", new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.DropDownList("IdQuestionnaire", null, "[--Please select--]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdQuestionnaire, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.ConsultantUsers, "ConsultantUsers", new { @class = "control-label col-md-2" })
                            </div>
                            <div class="editor-field">
                                <div class="col-md-7">
                                    @Html.ListBox("ConsultantUsers", null, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        @*<div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Candidates, "Candidates", new { @class = "control-label col-md-2" })
                            </div>
                            <div class="editor-field">
                                <div class="col-md-7">
                                    @Html.ListBox("Candidates", null, new { @class = "form-control" })
                                    @*<a href="#" class="uppercase" data-toggle="modal" data-target="#new-candidat-modal" style="padding-left: 4px">Add New Candidate</a>*@
                                @*</div>
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.TextAreaFor(model => model.Description, 5, 80, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment, new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.TextAreaFor(model => model.Comment, 5, 80, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.EnumDropDownListFor(model => model.Status, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.Coverage)
                        @Html.HiddenFor(model => model.Completion)

                    </div><!-- /.box-body -->
                    <div class="box-footer">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-default" })
                    </div><!-- /.box-footer -->
                </form>
            </div><!-- /.box -->
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->

@*<div class="modal modal-primary" id="new-candidat-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Add new candidate</h4>
            </div>
            <div class="modal-body">
                @{Html.RenderPartial("~/Views/Candidates/Create.cshtml", new Candidate());}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-outline" id="candidat-add">Add candidate</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/ej")
    <script type="text/javascript">
    $(document).ready(function () {
        @*var candiselected = @Html.Raw(ViewBag.CandidatesSelected);
        $('#Candidates').multiselect({ includeSelectAllOption: true, disableIfEmpty: true, enableCaseInsensitiveFiltering: true });
        $('#Candidates').multiselect('select', candiselected);*@
        var consuselected = @Html.Raw(ViewBag.ConsultantUsersSelected);
        $('#ConsultantUsers').multiselect({ includeSelectAllOption: true, disableIfEmpty: true, enableCaseInsensitiveFiltering: true });
        $('#ConsultantUsers').multiselect('select', consuselected);
        $('button.multiselect').parent().width('100%');
    });
    </script>

    <!-- Change the active in the left side menu -->
    <script type="text/javascript">
        $(document).ready(function () {
            $('ul.sidebar-menu > li').removeClass('active');
            $('ul.sidebar-menu > li > a[href="/Campaigns"]').parent().addClass('active');
        });
    </script>

    @*<script type="text/javascript">
        function selectedStartDate(sender) {
            var selDate = new Date(sender.value); // mentions the selected date.
            minDatepicker = $("#EndDate").data("ejDatePicker");// creating DatePicker object
            minDatepicker.setModel({ "minDate": selDate });// setting minDate property through setModel of DatePicker object.
        }

        function selectedEndDate(sender) {
            var selDate = new Date(sender.value);
            maxDatepicker = $("#StartDate").data("ejDatePicker");// creating DatePicker object
            maxDatepicker.setModel({ "maxDate": selDate });// setting maxDate property through setModel of DatePicker object.
        }
    </script>*@

    @*<script type="text/javascript">
        $(document).ready(function () {

            $('#candidat-add').click(function () {
                if (!$("#candiform").validate()) {
                    alert("ERROR");
                    return false;
                }

                var arraycandi = [$("#FirstName").val(), $("#LastName").val(), $("#PhoneNumber").val(), $("#EmailAddress").val(), $("#modalcust").val(), $("#IdGroup").val(), $("#modalcom").val(), $("#Function").val()];
                $.ajax({
                    url: '@Url.Action("AddCandidatAjax", "Campaigns")',
                    contentType: 'application/json;',
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify(arraycandi),
                    success: function (result) {
                        if (result.message != "error") {
                            $('#new-candidat-modal').modal('hide').find('form')[0].reset();
                            $('#Candidates').append(new Option(result.name, result.id));
                            window.location.reload();
                        }
                        else {
                            alert("An error occured, please retry in a few moment.");
                        }
                    }
                });
            });
        });
</script>*@

}

