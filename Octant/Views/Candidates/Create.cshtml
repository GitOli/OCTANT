@model Interview.Candidate

@{
    ViewBag.Title = "Create";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-bar-chart"></i> Octant</a></li>
        <li><a href="@Url.Action("Index", "Candidates")">Candidates</a></li>
        <li class="active">Create</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">

                <form method="post" action="@Url.Action("Create", "Candidates")" role="form" class="form-horizontal">
                    <div class="box-header with-border">
                        <input type="submit" value="Create" class="btn btn-primary" data-toggle="tooltip" title="Create new Candidate" />
                    </div><!-- /.box-header -->
                    <div class="box-body">

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCustomer, "Customer", htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.DropDownList("IdCustomer", null, "[--Please select--]", htmlAttributes: new {@id = "modalcust", @class = "form-control"})
                                @Html.ValidationMessageFor(model => model.IdCustomer, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Function, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Function, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Function, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmailAddress, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.TextAreaFor(model => model.Comment, 5, 80, new {@id = "modalcom", @class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Comment, "", new {@class = "text-danger"})
                            </div>
                        </div>

                    </div><!-- /.box-body -->
                    <div class="box-footer">
                        <input type="submit" value="Create" class="btn btn-primary" data-toggle="tooltip" title="Create new Candidate"/>
                        @Html.ActionLink("Cancel", "Index", null, new {@class = "btn btn-default"})
                    </div><!-- /.box-footer -->
                </form>
            </div><!-- /.box -->
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <!-- Change the active in the left side menu -->
    <script type="text/javascript">
        $(document).ready(function() {
            $('ul.sidebar-menu > li').removeClass('active');
            $('ul.sidebar-menu > li > a[href="/Candidates"]').parent().addClass('active');
        });
    </script>
}