@using Interview
@model Interview

@{
    ViewBag.Title = "Interview Create";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-bar-chart"></i> Octant</a></li>
        @if (ViewBag.HasCampaign == 0)
        {
            <li><a href="@Url.Action("Index", "Interviews")">Interviews</a></li>
        }
        else
        {
            <li><a href="@Url.Action("Index", "Home")">Campaign</a></li>
            <li><a href="@Url.Action("Index", "Interviews")">Interviews</a></li>
        }
        <li class="active">Create</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">
                <form method="post" action="@Url.Action("Create", "Interviews")" role="form" class="form-horizontal">
                    <div class="box-header with-border">
                        @*<h3 class="box-title">Create Interview</h3>*@
                        <input type="submit" name="Command" value="Start" class="btn btn-primary" data-toggle="tooltip" title="Create new Interview & Start it now" />
                        <input type="submit" name="Command" value="Create" class="btn btn-primary" data-toggle="tooltip" title="Create new Interview & Start it later" />
                    </div><!-- /.box-header -->
                    <div class="box-body">

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.Name, new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCampaign, "Campaign", new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.DropDownList("IdCampaign", null, htmlAttributes: new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.IdCampaign, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                <div class="input-group">
                                    @Html.EJ().DatePickerFor(model => model.Date).Width("100%").DateFormat("dd/MM/yyyy").Value(DateTime.Now.ToShortDateString()).MinDate(@ViewBag.MinDateDay)
                                    @*@Html.EJ().DatePickerFor(model => model.Date).Width("100%").DateFormat("dd/MM/yyyy").Value(DateTime.Now.ToShortDateString())*@
                                </div>
                                @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Id, "Consultant", htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.DropDownList("Id", null, "[--Please select--]", new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Id, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Candidates, "Candidates", new {@class = "control-label col-md-2"})
                            </div>
                            <div class="editor-field">
                                <div class="col-md-7">
                                    @Html.ListBox("Candidates", null, new {@class = "form-control"})
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.TextAreaFor(model => model.Description, 5, 80, new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment, new {@class = "control-label col-md-2"})
                            <div class="col-md-7">
                                @Html.TextAreaFor(model => model.Comment, 5, 80, new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Comment, "", new {@class = "text-danger"})
                            </div>
                        </div>

                    </div><!-- /.box-body -->
                    <div class="box-footer">
                        <input type="submit" name="Command" value="Start" class="btn btn-primary" data-toggle="tooltip" title="Create new Interview & Start conducting it"/>
                        <input type="submit" name="Command" value="Create" class="btn btn-primary" data-toggle="tooltip" title="Create new Interview & Start it later"/>

                        @(ViewBag.IdCamp != null ? Html.ActionLink("Cancel", "Details", "Campaigns", new {id = ViewBag.IdCamp}, new {@class = "btn btn-default"}) : Html.ActionLink("Cancel", "Index", "Home", null, new {@class = "btn btn-default"}))


                    </div><!-- /.box-footer -->
                </form>
            </div><!-- /.box -->
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/ej")
    <script type="text/javascript">
        $('#Candidates').multiselect({ includeSelectAllOption: true, disableIfEmpty: true, enableCaseInsensitiveFiltering: true });
        $('button.multiselect').parent().width('100%');
    </script>

    <!-- Change the active in the left side menu -->
    <script type="text/javascript">
        $(document).ready(function() {
            $('ul.sidebar-menu > li').removeClass('active');
            $('ul.sidebar-menu > li > a[href="/Campaigns"]').parent().addClass('active');
        });
    </script>
}
